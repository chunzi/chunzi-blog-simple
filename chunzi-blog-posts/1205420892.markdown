git 之初体验


* 目前对于 git 只是了解了些皮毛，略有体会。
* git 速度超快。因它对所有对象都打包压缩起来统一放在仓库里。
* git 只维护文件。这点和 Perforce 相同。svn 则可以维护目录。所以 svn 对于每个跟踪的目录都嵌一个隐藏的 .svn 目录保存跟踪信息。而 git 和 Perforce 则只在统一的一个地方内维护文件版本。
* git 作为分布式代码管理工具，无处不仓库。所以每次 git commit 都只对本地仓库提交，要发布到公共仓库或者备份仓库，则需要 git push。用惯了 svn 比较容易疏忽第二步。
* git 更适合广泛地引入他人的贡献。对于 svn，通常贡献者要主动联系到项目组或者作者，获取相应的 svn 帐户后，再行协作。而对于 git，贡献者根本无须事先联系，即刻在 clone 的仓库中开始自己的工作，待完成后通过邮件提交 patch，此后项目维护者可以在新的 branch 中合并 patch 并测试，通过的话再并入主干。这种“先做了再说”的行事态度极大的鼓励和推动了 geeker 们的热情和创造力。这同 wiki 的开放思想有着异曲同工之妙。
* git status 的输出不如 svn status 直观。很不习惯。或许可以 hack 一下，慢慢再说。
* git 比 svn 更强调 branch 的概念。以前使用 svn 不太会想起来有 branch 这件事。在 git 里就要时刻保持着“我现在在哪个 branch 里做事，这个 branch 是管什么事的”这样一种概念。因为从实现上，svn 通过复制目录创建一个分支，你可以在工作目录中看到这个 branch 的目录；而在 git 中，则完全用 ref 来指代当前所在的 branch，你可以选择和跳跃，然后就可以看到当前的工作目录里的内容就变化为该 branch 的内容了。显然，这是对 svn 在管理分支时仅采取目录模拟这种简单手法的改进。当然 git 的 branch 管理不仅于此，还有 rebase 等 fast forward。
* git 听起来就比 svn 酷。
